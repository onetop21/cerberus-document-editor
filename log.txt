2021-12-08 05:56:54.286718
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
app <class 'str'>
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
<Padding box/flow widget <Columns box/flow widget> left=2 min_width=20 right=2>
<Divider flow widget>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
<Padding box/flow widget <Columns box/flow widget> left=2 min_width=20 right=2>
<Divider flow widget>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
<Padding box/flow widget <Columns box/flow widget> left=2 min_width=20 right=2>
add_column_str
add_column_integer
<Padding box/flow widget <Columns box/flow widget> left=2 min_width=20 right=2>
<Divider flow widget>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
add_column_str
add_column_integer
add_column_str
add_column_str
add_column_integer
add_column_str
image <class 'str'>
add_column_str
add_column_integer
add_column_str
add_column_integer
add_column_str
add_column_integer
add_column_str
add_column_integer
{'document': {'aaa': {'kind': 'Service', 'restartPolicy': 'never', 'scale': 1}}, 'schema': {'__root__': {'type': 'dict', 'keysrules': {'type': 'string', 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$'}, 'valuesrules': {'type': 'dict', 'selector': {'job': {'image': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?'}, 'env': {'type': 'dict'}, 'ports': {'type': 'list', 'schema': {'type': 'integer'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}, 'mounts': {'type': 'list', 'schema': {'type': 'string', 'regex': '[A-Za-z0-9-_]+:/\\w+'}}, 'constraints': {'type': 'dict', 'schema': {'hostname': {'type': 'string'}, 'label': {'type': 'dict'}}}, 'restartPolicy': {'type': 'string', 'allowed': ['never', 'onFailure'], 'default': 'never', 'excludes': 'runSpec', 'dependencies': {'scale': 1}}, 'scale': {'type': 'integer', 'default': 1, 'excludes': 'runSpec'}, 'quota': {'type': 'dict', 'excludes': 'resources', 'schema': {'cpu': {'type': 'number'}, 'gpu': {'type': 'integer'}, 'mem': {'type': 'string', 'regex': '[0-9]+[GMK]?[i]?'}}}}, 'service': {'image': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?'}, 'env': {'type': 'dict'}, 'ports': {'type': 'list', 'schema': {'type': 'integer'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}, 'mounts': {'type': 'list', 'schema': {'type': 'string', 'regex': '[A-Za-z0-9-_]+:/\\w+'}}, 'constraints': {'type': 'dict', 'schema': {'hostname': {'type': 'string'}, 'label': {'type': 'dict'}}}, 'restartPolicy': {'type': 'string', 'allowed': ['always'], 'default': 'always', 'excludes': 'runSpec'}, 'scale': {'type': 'integer', 'default': 1, 'excludes': 'runSpec'}, 'quota': {'type': 'dict', 'excludes': 'resources', 'schema': {'cpu': {'type': 'number'}, 'gpu': {'type': 'integer'}, 'mem': {'type': 'string', 'regex': '[0-9]+[GMK]?[i]?'}}}}}}, 'order': 30}}}
{'document': {'kind': 'Train', 'apiVersion': 'v1', 'name': 'test-abasdf-a', 'version': '0.0.1', 'maintainer': 'codespace', 'workdir': '.', 'workspace': {'kind': 'Workspace', 'env': {'PYTHONUNBUFFERED': '1', 'test test': 'aaa', 'hello-world': 'bbb'}, 'ignores': ['**/.*'], 'preps': []}, 'app': {'aaa': {'kind': 'Service', 'restartPolicy': 'never', 'scale': 1}}}, 'schema': {'__root__': {'type': 'dict', 'selector': {'train': {'apiVersion': {'type': 'string', 'regex': 'v[0-9]+', 'default': 'v1', 'order': 0}, 'name': {'type': 'string', 'required': True, 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$', 'empty': False, 'order': 1, 'description': 'This is project name'}, 'version': {'type': 'string', 'regex': '[0-9]+\\.[0-9]+\\.[0-9]+', 'default': '0.0.1', 'order': 2}, 'maintainer': {'type': 'string', 'default': 'codespace', 'order': 3}, 'workdir': {'type': 'string', 'default': '.', 'order': 4}, 'workspace': {'type': 'dict', 'required': True, 'selector': {'workspace': {'base': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?', 'required': True}, 'preps': {'type': 'list', 'schema': {'type': 'dict', 'schema': {'run': {'type': 'string'}, 'add': {'type': 'string'}, 'pip': {'type': 'string'}, 'apt': {'type': 'string'}, 'yum': {'type': 'string'}, 'apk': {'type': 'string'}}}}, 'ignores': {'type': 'list', 'default': ['**/.*'], 'schema': {'type': 'string'}}, 'script': {'type': 'string'}, 'env': {'type': 'dict', 'valuesrules': {'schema': {'type': ['string']}}, 'default': {'PYTHONUNBUFFERED': '1'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}}, 'buildscript': {'buildscript': {'type': 'string', 'default': 'FROM    python:latest', 'required': True}, 'ignores': {'type': 'list', 'default': ['**/.*'], 'schema': {'type': 'string'}}}, 'dockerfile': {'filePath': {'type': 'string', 'default': 'Dockerfile', 'required': True}, 'ignorePath': {'type': 'string', 'default': '.dockerignore'}}}, 'order': 10}, 'app': {'type': 'dict', 'keysrules': {'type': 'string', 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$'}, 'valuesrules': {'type': 'dict', 'selector': {'job': {'image': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?'}, 'env': {'type': 'dict'}, 'ports': {'type': 'list', 'schema': {'type': 'integer'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}, 'mounts': {'type': 'list', 'schema': {'type': 'string', 'regex': '[A-Za-z0-9-_]+:/\\w+'}}, 'constraints': {'type': 'dict', 'schema': {'hostname': {'type': 'string'}, 'label': {'type': 'dict'}}}, 'restartPolicy': {'type': 'string', 'allowed': ['never', 'onFailure'], 'default': 'never', 'excludes': 'runSpec', 'dependencies': {'scale': 1}}, 'scale': {'type': 'integer', 'default': 1, 'excludes': 'runSpec'}, 'quota': {'type': 'dict', 'excludes': 'resources', 'schema': {'cpu': {'type': 'number'}, 'gpu': {'type': 'integer'}, 'mem': {'type': 'string', 'regex': '[0-9]+[GMK]?[i]?'}}}}, 'service': {'image': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?'}, 'env': {'type': 'dict'}, 'ports': {'type': 'list', 'schema': {'type': 'integer'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}, 'mounts': {'type': 'list', 'schema': {'type': 'string', 'regex': '[A-Za-z0-9-_]+:/\\w+'}}, 'constraints': {'type': 'dict', 'schema': {'hostname': {'type': 'string'}, 'label': {'type': 'dict'}}}, 'restartPolicy': {'type': 'string', 'allowed': ['always'], 'default': 'always', 'excludes': 'runSpec'}, 'scale': {'type': 'integer', 'default': 1, 'excludes': 'runSpec'}, 'quota': {'type': 'dict', 'excludes': 'resources', 'schema': {'cpu': {'type': 'number'}, 'gpu': {'type': 'integer'}, 'mem': {'type': 'string', 'regex': '[0-9]+[GMK]?[i]?'}}}}}}, 'order': 30}, 'kind': {'type': 'string', 'allowed': ['Train'], 'default': 'Train', 'order': 0}}, 'deployment': {'apiVersion': {'type': 'string', 'regex': 'v[0-9]+', 'default': 'v1', 'order': 0}, 'name': {'type': 'string', 'required': True, 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$', 'empty': False, 'order': 1, 'description': 'This is project name'}, 'version': {'type': 'string', 'regex': '[0-9]+\\.[0-9]+\\.[0-9]+', 'default': '0.0.1', 'order': 2}, 'maintainer': {'type': 'string', 'default': 'codespace', 'order': 3}, 'workdir': {'type': 'string', 'default': '.', 'order': 4}, 'workspace': {'type': 'dict', 'required': True, 'selector': {'workspace': {'base': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?', 'required': True}, 'preps': {'type': 'list', 'schema': {'type': 'dict', 'schema': {'run': {'type': 'string'}, 'add': {'type': 'string'}, 'pip': {'type': 'string'}, 'apt': {'type': 'string'}, 'yum': {'type': 'string'}, 'apk': {'type': 'string'}}}}, 'ignores': {'type': 'list', 'default': ['**/.*'], 'schema': {'type': 'string'}}, 'script': {'type': 'string'}, 'env': {'type': 'dict', 'valuesrules': {'schema': {'type': ['string']}}, 'default': {'PYTHONUNBUFFERED': '1'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}}, 'buildscript': {'buildscript': {'type': 'string', 'default': 'FROM    python:latest', 'required': True}, 'ignores': {'type': 'list', 'default': ['**/.*'], 'schema': {'type': 'string'}}}, 'dockerfile': {'filePath': {'type': 'string', 'default': 'Dockerfile', 'required': True}, 'ignorePath': {'type': 'string', 'default': '.dockerignore'}}}, 'order': 10}, 'ingress': {'type': 'dict', 'required': True, 'keysrules': {'type': 'string', 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$'}, 'valuesrules': {'type': 'dict', 'schema': {'target': {'type': 'string', 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9]):[0-9]+$', 'required': True}, 'rewritePath': {'type': 'boolean', 'default': True}}}, 'order': 20}, 'app': {'type': 'dict', 'keysrules': {'type': 'string', 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$'}, 'valuesrules': {'type': 'dict', 'selector': {'service': {'image': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?'}, 'env': {'type': 'dict'}, 'ports': {'type': 'list', 'schema': {'type': 'integer'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}, 'mounts': {'type': 'list', 'schema': {'type': 'string', 'regex': '[A-Za-z0-9-_]+:/\\w+'}}, 'constraints': {'type': 'dict', 'schema': {'hostname': {'type': 'string'}, 'label': {'type': 'dict'}}}, 'restartPolicy': {'type': 'string', 'allowed': ['always'], 'default': 'always', 'excludes': 'runSpec'}, 'scale': {'type': 'integer', 'default': 1, 'excludes': 'runSpec'}, 'quota': {'type': 'dict', 'excludes': 'resources', 'schema': {'cpu': {'type': 'number'}, 'gpu': {'type': 'integer'}, 'mem': {'type': 'string', 'regex': '[0-9]+[GMK]?[i]?'}}}}}}, 'order': 30}, 'kind': {'type': 'string', 'allowed': ['Deployment'], 'default': 'Train', 'order': 0}}, 'component': {'apiVersion': {'type': 'string', 'regex': 'v[0-9]+', 'default': 'v1', 'order': 0}, 'name': {'type': 'string', 'required': True, 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$', 'empty': False, 'order': 1, 'description': 'This is project name'}, 'version': {'type': 'string', 'regex': '[0-9]+\\.[0-9]+\\.[0-9]+', 'default': '0.0.1', 'order': 2}, 'maintainer': {'type': 'string', 'default': 'codespace', 'order': 3}, 'workdir': {'type': 'string', 'default': '.', 'order': 4}, 'workspace': {'type': 'dict', 'required': False, 'selector': {'workspace': {'base': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?', 'required': True}, 'preps': {'type': 'list', 'schema': {'type': 'dict', 'schema': {'run': {'type': 'string'}, 'add': {'type': 'string'}, 'pip': {'type': 'string'}, 'apt': {'type': 'string'}, 'yum': {'type': 'string'}, 'apk': {'type': 'string'}}}}, 'ignores': {'type': 'list', 'default': ['**/.*'], 'schema': {'type': 'string'}}, 'script': {'type': 'string'}, 'env': {'type': 'dict', 'valuesrules': {'schema': {'type': ['string']}}, 'default': {'PYTHONUNBUFFERED': '1'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}}, 'buildscript': {'buildscript': {'type': 'string', 'default': 'FROM    python:latest', 'required': True}, 'ignores': {'type': 'list', 'default': ['**/.*'], 'schema': {'type': 'string'}}}, 'dockerfile': {'filePath': {'type': 'string', 'default': 'Dockerfile', 'required': True}, 'ignorePath': {'type': 'string', 'default': '.dockerignore'}}}, 'order': 10}, 'app': {'type': 'dict', 'keysrules': {'type': 'string', 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$'}, 'valuesrules': {'type': 'dict', 'selector': {'component': {'image': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?'}, 'env': {'type': 'dict'}, 'ports': {'type': 'list', 'schema': {'type': 'integer'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}, 'mounts': {'type': 'list', 'schema': {'type': 'string', 'regex': '[A-Za-z0-9-_]+:/\\w+'}}}}}, 'order': 30}, 'kind': {'type': 'string', 'allowed': ['Component'], 'default': 'Train', 'order': 0}}}}}}
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
<Padding box/flow widget <Columns box/flow widget> left=2 min_width=20 right=2>
<Divider flow widget>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
<Padding box/flow widget <Columns box/flow widget> left=2 min_width=20 right=2>
<Divider flow widget>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
<Padding box/flow widget <Columns box/flow widget> left=2 min_width=20 right=2>
{'document': {'sdfsdf': {'rewritePath': True}}, 'schema': {'__root__': {'type': 'dict', 'required': True, 'keysrules': {'type': 'string', 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$'}, 'valuesrules': {'type': 'dict', 'schema': {'target': {'type': 'string', 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9]):[0-9]+$', 'required': True}, 'rewritePath': {'type': 'boolean', 'default': True}}}, 'order': 20}}}
{'document': {'kind': 'Deployment', 'apiVersion': 'v1', 'name': 'test-abasdf-a', 'version': '0.0.1', 'maintainer': 'codespace', 'workdir': '.', 'workspace': {'kind': 'Workspace', 'env': {'PYTHONUNBUFFERED': '1', 'test test': 'aaa', 'hello-world': 'bbb'}, 'ignores': ['**/.*'], 'preps': []}, 'app': {'aaa': {'kind': 'Service', 'restartPolicy': 'never', 'scale': 1}}, 'ingress': {'sdfsdf': {'rewritePath': True}}}, 'schema': {'__root__': {'type': 'dict', 'selector': {'train': {'apiVersion': {'type': 'string', 'regex': 'v[0-9]+', 'default': 'v1', 'order': 0}, 'name': {'type': 'string', 'required': True, 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$', 'empty': False, 'order': 1, 'description': 'This is project name'}, 'version': {'type': 'string', 'regex': '[0-9]+\\.[0-9]+\\.[0-9]+', 'default': '0.0.1', 'order': 2}, 'maintainer': {'type': 'string', 'default': 'codespace', 'order': 3}, 'workdir': {'type': 'string', 'default': '.', 'order': 4}, 'workspace': {'type': 'dict', 'required': True, 'selector': {'workspace': {'base': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?', 'required': True}, 'preps': {'type': 'list', 'schema': {'type': 'dict', 'schema': {'run': {'type': 'string'}, 'add': {'type': 'string'}, 'pip': {'type': 'string'}, 'apt': {'type': 'string'}, 'yum': {'type': 'string'}, 'apk': {'type': 'string'}}}}, 'ignores': {'type': 'list', 'default': ['**/.*'], 'schema': {'type': 'string'}}, 'script': {'type': 'string'}, 'env': {'type': 'dict', 'valuesrules': {'schema': {'type': ['string']}}, 'default': {'PYTHONUNBUFFERED': '1'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}}, 'buildscript': {'buildscript': {'type': 'string', 'default': 'FROM    python:latest', 'required': True}, 'ignores': {'type': 'list', 'default': ['**/.*'], 'schema': {'type': 'string'}}}, 'dockerfile': {'filePath': {'type': 'string', 'default': 'Dockerfile', 'required': True}, 'ignorePath': {'type': 'string', 'default': '.dockerignore'}}}, 'order': 10}, 'app': {'type': 'dict', 'keysrules': {'type': 'string', 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$'}, 'valuesrules': {'type': 'dict', 'selector': {'job': {'image': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?'}, 'env': {'type': 'dict'}, 'ports': {'type': 'list', 'schema': {'type': 'integer'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}, 'mounts': {'type': 'list', 'schema': {'type': 'string', 'regex': '[A-Za-z0-9-_]+:/\\w+'}}, 'constraints': {'type': 'dict', 'schema': {'hostname': {'type': 'string'}, 'label': {'type': 'dict'}}}, 'restartPolicy': {'type': 'string', 'allowed': ['never', 'onFailure'], 'default': 'never', 'excludes': 'runSpec', 'dependencies': {'scale': 1}}, 'scale': {'type': 'integer', 'default': 1, 'excludes': 'runSpec'}, 'quota': {'type': 'dict', 'excludes': 'resources', 'schema': {'cpu': {'type': 'number'}, 'gpu': {'type': 'integer'}, 'mem': {'type': 'string', 'regex': '[0-9]+[GMK]?[i]?'}}}}, 'service': {'image': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?'}, 'env': {'type': 'dict'}, 'ports': {'type': 'list', 'schema': {'type': 'integer'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}, 'mounts': {'type': 'list', 'schema': {'type': 'string', 'regex': '[A-Za-z0-9-_]+:/\\w+'}}, 'constraints': {'type': 'dict', 'schema': {'hostname': {'type': 'string'}, 'label': {'type': 'dict'}}}, 'restartPolicy': {'type': 'string', 'allowed': ['always'], 'default': 'always', 'excludes': 'runSpec'}, 'scale': {'type': 'integer', 'default': 1, 'excludes': 'runSpec'}, 'quota': {'type': 'dict', 'excludes': 'resources', 'schema': {'cpu': {'type': 'number'}, 'gpu': {'type': 'integer'}, 'mem': {'type': 'string', 'regex': '[0-9]+[GMK]?[i]?'}}}}}}, 'order': 30}, 'kind': {'type': 'string', 'allowed': ['Train'], 'default': 'Train', 'order': 0}}, 'deployment': {'apiVersion': {'type': 'string', 'regex': 'v[0-9]+', 'default': 'v1', 'order': 0}, 'name': {'type': 'string', 'required': True, 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$', 'empty': False, 'order': 1, 'description': 'This is project name'}, 'version': {'type': 'string', 'regex': '[0-9]+\\.[0-9]+\\.[0-9]+', 'default': '0.0.1', 'order': 2}, 'maintainer': {'type': 'string', 'default': 'codespace', 'order': 3}, 'workdir': {'type': 'string', 'default': '.', 'order': 4}, 'workspace': {'type': 'dict', 'required': True, 'selector': {'workspace': {'base': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?', 'required': True}, 'preps': {'type': 'list', 'schema': {'type': 'dict', 'schema': {'run': {'type': 'string'}, 'add': {'type': 'string'}, 'pip': {'type': 'string'}, 'apt': {'type': 'string'}, 'yum': {'type': 'string'}, 'apk': {'type': 'string'}}}}, 'ignores': {'type': 'list', 'default': ['**/.*'], 'schema': {'type': 'string'}}, 'script': {'type': 'string'}, 'env': {'type': 'dict', 'valuesrules': {'schema': {'type': ['string']}}, 'default': {'PYTHONUNBUFFERED': '1'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}}, 'buildscript': {'buildscript': {'type': 'string', 'default': 'FROM    python:latest', 'required': True}, 'ignores': {'type': 'list', 'default': ['**/.*'], 'schema': {'type': 'string'}}}, 'dockerfile': {'filePath': {'type': 'string', 'default': 'Dockerfile', 'required': True}, 'ignorePath': {'type': 'string', 'default': '.dockerignore'}}}, 'order': 10}, 'ingress': {'type': 'dict', 'required': True, 'keysrules': {'type': 'string', 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$'}, 'valuesrules': {'type': 'dict', 'schema': {'target': {'type': 'string', 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9]):[0-9]+$', 'required': True}, 'rewritePath': {'type': 'boolean', 'default': True}}}, 'order': 20}, 'app': {'type': 'dict', 'keysrules': {'type': 'string', 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$'}, 'valuesrules': {'type': 'dict', 'selector': {'service': {'image': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?'}, 'env': {'type': 'dict'}, 'ports': {'type': 'list', 'schema': {'type': 'integer'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}, 'mounts': {'type': 'list', 'schema': {'type': 'string', 'regex': '[A-Za-z0-9-_]+:/\\w+'}}, 'constraints': {'type': 'dict', 'schema': {'hostname': {'type': 'string'}, 'label': {'type': 'dict'}}}, 'restartPolicy': {'type': 'string', 'allowed': ['always'], 'default': 'always', 'excludes': 'runSpec'}, 'scale': {'type': 'integer', 'default': 1, 'excludes': 'runSpec'}, 'quota': {'type': 'dict', 'excludes': 'resources', 'schema': {'cpu': {'type': 'number'}, 'gpu': {'type': 'integer'}, 'mem': {'type': 'string', 'regex': '[0-9]+[GMK]?[i]?'}}}}}}, 'order': 30}, 'kind': {'type': 'string', 'allowed': ['Deployment'], 'default': 'Train', 'order': 0}}, 'component': {'apiVersion': {'type': 'string', 'regex': 'v[0-9]+', 'default': 'v1', 'order': 0}, 'name': {'type': 'string', 'required': True, 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$', 'empty': False, 'order': 1, 'description': 'This is project name'}, 'version': {'type': 'string', 'regex': '[0-9]+\\.[0-9]+\\.[0-9]+', 'default': '0.0.1', 'order': 2}, 'maintainer': {'type': 'string', 'default': 'codespace', 'order': 3}, 'workdir': {'type': 'string', 'default': '.', 'order': 4}, 'workspace': {'type': 'dict', 'required': False, 'selector': {'workspace': {'base': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?', 'required': True}, 'preps': {'type': 'list', 'schema': {'type': 'dict', 'schema': {'run': {'type': 'string'}, 'add': {'type': 'string'}, 'pip': {'type': 'string'}, 'apt': {'type': 'string'}, 'yum': {'type': 'string'}, 'apk': {'type': 'string'}}}}, 'ignores': {'type': 'list', 'default': ['**/.*'], 'schema': {'type': 'string'}}, 'script': {'type': 'string'}, 'env': {'type': 'dict', 'valuesrules': {'schema': {'type': ['string']}}, 'default': {'PYTHONUNBUFFERED': '1'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}}, 'buildscript': {'buildscript': {'type': 'string', 'default': 'FROM    python:latest', 'required': True}, 'ignores': {'type': 'list', 'default': ['**/.*'], 'schema': {'type': 'string'}}}, 'dockerfile': {'filePath': {'type': 'string', 'default': 'Dockerfile', 'required': True}, 'ignorePath': {'type': 'string', 'default': '.dockerignore'}}}, 'order': 10}, 'app': {'type': 'dict', 'keysrules': {'type': 'string', 'regex': '^([a-z]+[a-z0-9\\-]*[a-z0-9]+|[a-z0-9])$'}, 'valuesrules': {'type': 'dict', 'selector': {'component': {'image': {'type': 'string', 'regex': '(?:.+/)?([^:]+)(?::.+)?'}, 'env': {'type': 'dict'}, 'ports': {'type': 'list', 'schema': {'type': 'integer'}}, 'command': {'type': ['string', 'list']}, 'args': {'type': ['string', 'list']}, 'mounts': {'type': 'list', 'schema': {'type': 'string', 'regex': '[A-Za-z0-9-_]+:/\\w+'}}}}}, 'order': 30}, 'kind': {'type': 'string', 'allowed': ['Component'], 'default': 'Train', 'order': 0}}}}}}
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
Test
<Padding box/flow widget <Columns box/flow widget> left=2 min_width=20 right=2>
<Divider flow widget>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
<Padding selectable box/flow widget <Columns selectable box/flow widget> left=2 min_width=20 right=2>
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
add_column_str
